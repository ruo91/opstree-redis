FROM registry.redhat.io/ubi9/ubi:9.6-1747219013 as builder
ARG TARGETARCH

LABEL version=1.0 \
      arch=$TARGETARCH \
      description="A production grade performance tuned redis docker image created by Opstree Solutions"

ARG REDIS_SENTINEL_VERSION="stable"

RUN dnf install -y \
    shadow-utils tzdata make gcc \
    gcc-c++ glibc-devel kernel-headers \
    bash openssl-devel libstdc++ procps-ng diffutils \
 && dnf clean all

WORKDIR /tmp

RUN VERSION=$(echo ${REDIS_SENTINEL_VERSION} | sed -e "s/^v//g"); \
    case "${VERSION}" in \
       latest | stable) REDIS_DOWNLOAD_URL="http://download.redis.io/redis-stable.tar.gz" && VERSION="stable";; \
       *) REDIS_DOWNLOAD_URL="http://download.redis.io/releases/redis-${VERSION}.tar.gz";; \
    esac; \
    \
    curl -fL -Lo redis-${VERSION}.tar.gz ${REDIS_DOWNLOAD_URL}; \
    tar xvzf redis-${VERSION}.tar.gz; \
    \
    arch="$(uname -m)"; \
    extraJemallocConfigureFlags="--with-lg-page=16"; \
    if [ "$arch" = "aarch64" ] || [ "$arch" = "arm64" ]; then \
      sed -ri 's!cd jemalloc && ./configure !&'"$extraJemallocConfigureFlags"' !' /tmp/redis-${VERSION}/deps/Makefile; \
    fi; \
    export BUILD_TLS=yes; \
    make -C redis-${VERSION} all; \
    make -C redis-${VERSION} install

FROM registry.redhat.io/ubi9/ubi:9.6-1747219013
ARG TARGETARCH
ENV SENTINEL_PORT=26379

LABEL version=1.0 \
      arch=$TARGETARCH \
      description="A production grade performance tuned redis docker image created by Opstree Solutions"


COPY --from=builder /usr/local/bin/redis-cli /usr/local/bin/redis-cli
COPY --from=builder /usr/local/bin/redis-sentinel /usr/local/bin/redis-sentinel

RUN groupadd -g 1000 redis && useradd -g redis -u 1000 redis \
  && dnf clean all

COPY sentinel.conf /etc/redis/sentinel.conf
COPY entrypoint-sentinel.sh /usr/bin/entrypoint-sentinel.sh
COPY healthcheck-Sentinel.sh /usr/bin/healthcheck.sh
COPY sysctl.conf /etc/sysctl.d/redis.conf

RUN chown -R 1000:0 /etc/redis && \
    chmod -R g+rw /etc/redis && \
    mkdir /sentinel-data && \
    chown -R 1000:0 /sentinel-data && \
    chmod -R g+rw /sentinel-data && \
    chmod -R g+rw /var/run

VOLUME ["/sentinel-data"]

WORKDIR /sentinel-data

EXPOSE ${SENTINEL_PORT}

USER 1000

ENTRYPOINT ["/usr/bin/entrypoint-sentinel.sh"]
